// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calculator,hls_ip_2017_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.399000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=2741,HLS_SYN_LUT=2096}" *)

module calculator (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        y,
        y_ap_vld,
        res2,
        res2_ap_vld,
        op
);

parameter    ap_ST_fsm_state1 = 114'd1;
parameter    ap_ST_fsm_state2 = 114'd2;
parameter    ap_ST_fsm_state3 = 114'd4;
parameter    ap_ST_fsm_state4 = 114'd8;
parameter    ap_ST_fsm_state5 = 114'd16;
parameter    ap_ST_fsm_state6 = 114'd32;
parameter    ap_ST_fsm_state7 = 114'd64;
parameter    ap_ST_fsm_state8 = 114'd128;
parameter    ap_ST_fsm_state9 = 114'd256;
parameter    ap_ST_fsm_state10 = 114'd512;
parameter    ap_ST_fsm_state11 = 114'd1024;
parameter    ap_ST_fsm_state12 = 114'd2048;
parameter    ap_ST_fsm_state13 = 114'd4096;
parameter    ap_ST_fsm_state14 = 114'd8192;
parameter    ap_ST_fsm_state15 = 114'd16384;
parameter    ap_ST_fsm_state16 = 114'd32768;
parameter    ap_ST_fsm_state17 = 114'd65536;
parameter    ap_ST_fsm_state18 = 114'd131072;
parameter    ap_ST_fsm_state19 = 114'd262144;
parameter    ap_ST_fsm_state20 = 114'd524288;
parameter    ap_ST_fsm_state21 = 114'd1048576;
parameter    ap_ST_fsm_state22 = 114'd2097152;
parameter    ap_ST_fsm_state23 = 114'd4194304;
parameter    ap_ST_fsm_state24 = 114'd8388608;
parameter    ap_ST_fsm_state25 = 114'd16777216;
parameter    ap_ST_fsm_state26 = 114'd33554432;
parameter    ap_ST_fsm_state27 = 114'd67108864;
parameter    ap_ST_fsm_state28 = 114'd134217728;
parameter    ap_ST_fsm_state29 = 114'd268435456;
parameter    ap_ST_fsm_state30 = 114'd536870912;
parameter    ap_ST_fsm_state31 = 114'd1073741824;
parameter    ap_ST_fsm_state32 = 114'd2147483648;
parameter    ap_ST_fsm_state33 = 114'd4294967296;
parameter    ap_ST_fsm_state34 = 114'd8589934592;
parameter    ap_ST_fsm_state35 = 114'd17179869184;
parameter    ap_ST_fsm_state36 = 114'd34359738368;
parameter    ap_ST_fsm_state37 = 114'd68719476736;
parameter    ap_ST_fsm_state38 = 114'd137438953472;
parameter    ap_ST_fsm_state39 = 114'd274877906944;
parameter    ap_ST_fsm_state40 = 114'd549755813888;
parameter    ap_ST_fsm_state41 = 114'd1099511627776;
parameter    ap_ST_fsm_state42 = 114'd2199023255552;
parameter    ap_ST_fsm_state43 = 114'd4398046511104;
parameter    ap_ST_fsm_state44 = 114'd8796093022208;
parameter    ap_ST_fsm_state45 = 114'd17592186044416;
parameter    ap_ST_fsm_state46 = 114'd35184372088832;
parameter    ap_ST_fsm_state47 = 114'd70368744177664;
parameter    ap_ST_fsm_state48 = 114'd140737488355328;
parameter    ap_ST_fsm_state49 = 114'd281474976710656;
parameter    ap_ST_fsm_state50 = 114'd562949953421312;
parameter    ap_ST_fsm_state51 = 114'd1125899906842624;
parameter    ap_ST_fsm_state52 = 114'd2251799813685248;
parameter    ap_ST_fsm_state53 = 114'd4503599627370496;
parameter    ap_ST_fsm_state54 = 114'd9007199254740992;
parameter    ap_ST_fsm_state55 = 114'd18014398509481984;
parameter    ap_ST_fsm_state56 = 114'd36028797018963968;
parameter    ap_ST_fsm_state57 = 114'd72057594037927936;
parameter    ap_ST_fsm_state58 = 114'd144115188075855872;
parameter    ap_ST_fsm_state59 = 114'd288230376151711744;
parameter    ap_ST_fsm_state60 = 114'd576460752303423488;
parameter    ap_ST_fsm_state61 = 114'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 114'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 114'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 114'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 114'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 114'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 114'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 114'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 114'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 114'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 114'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 114'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 114'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 114'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 114'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 114'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 114'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 114'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 114'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 114'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 114'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 114'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 114'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 114'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 114'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 114'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 114'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 114'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 114'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 114'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 114'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 114'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 114'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 114'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 114'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 114'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 114'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 114'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 114'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 114'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 114'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 114'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 114'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 114'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 114'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 114'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 114'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 114'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 114'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 114'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 114'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 114'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 114'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 114'd10384593717069655257060992658440192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a;
input  [31:0] b;
output  [31:0] y;
output   y_ap_vld;
output  [31:0] res2;
output   res2_ap_vld;
input  [7:0] op;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] y;
reg y_ap_vld;
reg res2_ap_vld;

(* fsm_encoding = "none" *) reg   [113:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] op_read_read_fu_42_p2;
wire   [0:0] tmp_10_fu_178_p2;
reg   [0:0] tmp_10_reg_244;
wire    ap_CS_fsm_state2;
wire   [30:0] i_1_fu_200_p2;
reg   [30:0] i_1_reg_251;
wire    ap_CS_fsm_state37;
wire   [0:0] tmp_12_fu_188_p2;
wire   [31:0] grp_fu_194_p2;
wire    ap_CS_fsm_state39;
wire   [31:0] grp_fu_128_p2;
reg   [31:0] tmp_5_reg_261;
wire    ap_CS_fsm_state41;
wire   [31:0] grp_fu_147_p2;
wire    ap_CS_fsm_state112;
reg  signed [31:0] tmp_s_reg_77;
reg   [30:0] i_reg_87;
reg   [31:0] res2_new_1_phi_fu_103_p16;
reg   [31:0] res2_new_1_reg_99;
wire   [31:0] grp_fu_211_p2;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state114;
wire   [0:0] tmp_4_fu_134_p2;
wire   [31:0] tmp_2_fu_160_p2;
wire   [31:0] tmp_1_fu_167_p2;
wire   [31:0] grp_fu_206_p2;
wire   [31:0] grp_fu_140_p2;
wire   [31:0] grp_fu_153_p2;
wire   [7:0] grp_fu_128_p1;
wire  signed [31:0] tmp_4_fu_134_p0;
wire  signed [31:0] tmp_2_fu_160_p0;
wire  signed [31:0] tmp_2_fu_160_p1;
wire  signed [31:0] tmp_1_fu_167_p0;
wire  signed [31:0] tmp_1_fu_167_p1;
wire   [31:0] i_cast_fu_174_p1;
wire  signed [31:0] tmp_10_fu_178_p1;
wire   [31:0] grp_fu_183_p2;
wire    ap_CS_fsm_state42;
reg    grp_fu_140_ap_start;
wire    grp_fu_140_ap_done;
reg    grp_fu_147_ap_start;
wire    grp_fu_147_ap_done;
reg    grp_fu_183_ap_start;
wire    grp_fu_183_ap_done;
reg    grp_fu_206_ap_start;
wire    grp_fu_206_ap_done;
reg    grp_fu_211_ap_start;
wire    grp_fu_211_ap_done;
reg   [113:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 114'd1;
end

calculator_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
calculator_mul_32bkb_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a),
    .din1(grp_fu_128_p1),
    .ce(1'b1),
    .dout(grp_fu_128_p2)
);

calculator_sdiv_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_sdiv_3cud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_140_ap_start),
    .done(grp_fu_140_ap_done),
    .din0(a),
    .din1(b),
    .ce(1'b1),
    .dout(grp_fu_140_p2)
);

calculator_srem_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_srem_3dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_147_ap_start),
    .done(grp_fu_147_ap_done),
    .din0(a),
    .din1(b),
    .ce(1'b1),
    .dout(grp_fu_147_p2)
);

calculator_mul_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_mul_32eOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b),
    .din1(a),
    .ce(1'b1),
    .dout(grp_fu_153_p2)
);

calculator_sdiv_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_sdiv_3fYi_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_183_ap_start),
    .done(grp_fu_183_ap_done),
    .din0(32'd2147483647),
    .din1(a),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

calculator_mul_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_mul_32eOg_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_77),
    .din1(a),
    .ce(1'b1),
    .dout(grp_fu_194_p2)
);

calculator_sdiv_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_sdiv_3fYi_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_206_ap_start),
    .done(grp_fu_206_ap_done),
    .din0(tmp_5_reg_261),
    .din1(b),
    .ce(1'b1),
    .dout(grp_fu_206_p2)
);

calculator_srem_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
calculator_srem_3g8j_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_211_ap_start),
    .done(grp_fu_211_ap_done),
    .din0(tmp_5_reg_261),
    .din1(b),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_reg_87 <= i_1_reg_251;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd6))) begin
        i_reg_87 <= 31'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        res2_new_1_reg_99 <= grp_fu_147_p2;
    end else if (((op_read_read_fu_42_p2 == 8'd5) & (1'b1 == ap_CS_fsm_state77))) begin
        res2_new_1_reg_99 <= grp_fu_211_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ~(op_read_read_fu_42_p2 == 8'd1) & ~(op_read_read_fu_42_p2 == 8'd2) & ~(op_read_read_fu_42_p2 == 8'd3) & ~(op_read_read_fu_42_p2 == 8'd4) & ~(op_read_read_fu_42_p2 == 8'd5) & ~(op_read_read_fu_42_p2 == 8'd6)) | (1'b1 == ap_CS_fsm_state114) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd1 == tmp_4_fu_134_p2)) | ((1'b1 == ap_CS_fsm_state37) & ((tmp_10_reg_244 == 1'd0) | (1'd1 == tmp_12_fu_188_p2))))) begin
        res2_new_1_reg_99 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_s_reg_77 <= grp_fu_194_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd6))) begin
        tmp_s_reg_77 <= a;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (tmp_10_reg_244 == 1'd1) & (tmp_12_fu_188_p2 == 1'd0))) begin
        i_1_reg_251 <= i_1_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_10_reg_244 <= tmp_10_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_5_reg_261 <= grp_fu_128_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd0 == tmp_4_fu_134_p2))) begin
        grp_fu_140_ap_start = 1'b1;
    end else begin
        grp_fu_140_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd0 == tmp_4_fu_134_p2))) begin
        grp_fu_147_ap_start = 1'b1;
    end else begin
        grp_fu_147_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_10_fu_178_p2 == 1'd1))) begin
        grp_fu_183_ap_start = 1'b1;
    end else begin
        grp_fu_183_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_206_ap_start = 1'b1;
    end else begin
        grp_fu_206_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_211_ap_start = 1'b1;
    end else begin
        grp_fu_211_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        res2_ap_vld = 1'b1;
    end else begin
        res2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((op_read_read_fu_42_p2 == 8'd5) & (1'b1 == ap_CS_fsm_state77))) begin
        res2_new_1_phi_fu_103_p16 = grp_fu_211_p2;
    end else begin
        res2_new_1_phi_fu_103_p16 = res2_new_1_reg_99;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        y = grp_fu_153_p2;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        y = grp_fu_140_p2;
    end else if (((op_read_read_fu_42_p2 == 8'd5) & (1'b1 == ap_CS_fsm_state77))) begin
        y = grp_fu_206_p2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        y = grp_fu_194_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ~(op_read_read_fu_42_p2 == 8'd1) & ~(op_read_read_fu_42_p2 == 8'd2) & ~(op_read_read_fu_42_p2 == 8'd3) & ~(op_read_read_fu_42_p2 == 8'd4) & ~(op_read_read_fu_42_p2 == 8'd5) & ~(op_read_read_fu_42_p2 == 8'd6))) begin
        y = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd1))) begin
        y = tmp_1_fu_167_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd2))) begin
        y = tmp_2_fu_160_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd1 == tmp_4_fu_134_p2)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_10_reg_244 == 1'd1) & (1'd1 == tmp_12_fu_188_p2)))) begin
        y = 32'd2147483647;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd6))) begin
        y = a;
    end else begin
        y = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state112) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ~(op_read_read_fu_42_p2 == 8'd1) & ~(op_read_read_fu_42_p2 == 8'd2) & ~(op_read_read_fu_42_p2 == 8'd3) & ~(op_read_read_fu_42_p2 == 8'd4) & ~(op_read_read_fu_42_p2 == 8'd5) & ~(op_read_read_fu_42_p2 == 8'd6)) | ((op_read_read_fu_42_p2 == 8'd5) & (1'b1 == ap_CS_fsm_state77)) | (1'b1 == ap_CS_fsm_state114) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd1 == tmp_4_fu_134_p2)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_10_reg_244 == 1'd1) & (1'd1 == tmp_12_fu_188_p2)))) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((op_read_read_fu_42_p2 == 8'd1) | (op_read_read_fu_42_p2 == 8'd2) | ((op_read_read_fu_42_p2 == 8'd4) & (1'd1 == tmp_4_fu_134_p2)) | (~(op_read_read_fu_42_p2 == 8'd3) & ~(op_read_read_fu_42_p2 == 8'd4) & ~(op_read_read_fu_42_p2 == 8'd5) & ~(op_read_read_fu_42_p2 == 8'd6))))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd4) & (1'd0 == tmp_4_fu_134_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd3))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (op_read_read_fu_42_p2 == 8'd5))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_10_fu_178_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & ((tmp_10_reg_244 == 1'd0) | (1'd1 == tmp_12_fu_188_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign grp_fu_128_p1 = 32'd100;

assign i_1_fu_200_p2 = (i_reg_87 + 31'd1);

assign i_cast_fu_174_p1 = i_reg_87;

assign op_read_read_fu_42_p2 = op;

assign res2 = res2_new_1_phi_fu_103_p16;

assign tmp_10_fu_178_p1 = b;

assign tmp_10_fu_178_p2 = (($signed(i_cast_fu_174_p1) < $signed(tmp_10_fu_178_p1)) ? 1'b1 : 1'b0);

assign tmp_12_fu_188_p2 = (($signed(tmp_s_reg_77) > $signed(grp_fu_183_p2)) ? 1'b1 : 1'b0);

assign tmp_1_fu_167_p0 = b;

assign tmp_1_fu_167_p1 = a;

assign tmp_1_fu_167_p2 = ($signed(tmp_1_fu_167_p0) + $signed(tmp_1_fu_167_p1));

assign tmp_2_fu_160_p0 = a;

assign tmp_2_fu_160_p1 = b;

assign tmp_2_fu_160_p2 = ($signed(tmp_2_fu_160_p0) - $signed(tmp_2_fu_160_p1));

assign tmp_4_fu_134_p0 = b;

assign tmp_4_fu_134_p2 = ((tmp_4_fu_134_p0 == 32'd0) ? 1'b1 : 1'b0);

endmodule //calculator
